{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"_sources/","title":"Notes pour Bio-informaticien\u00b7nes","text":"<p>Cette page r\u00e9pertorie un ensemble de notes utiles pour les ing\u00e9nieur\u00b7es et chercheur\u00b7ses. L\u2019objectif est d\u2019offrir des tutoriels, fiches pratiques et cours couvrant les principaux aspects de l\u2019analyse de donn\u00e9es issues du vivant, de la planification des exp\u00e9riences jusqu\u2019\u00e0 la mise en production et la reproductibilit\u00e9.</p>"},{"location":"_sources/#comment-utiliser-ce-site","title":"Comment utiliser ce site","text":"<ul> <li> <p>Lire : parcourez les sections Tutos et Notebooks via le sommaire \u00e0 gauche.</p> </li> <li> <p>Notebook : Les notebooks sont d\u00e9j\u00e0 ex\u00e9cut\u00e9s.</p> </li> <li> <p>Reproduire en local (WSL/Linux) :</p> </li> </ul> <pre><code># cloner\ngit clone &lt;votre-fork-ou-ce-repo&gt;.git &amp;&amp; cd BioInformatic_Notebooks\n# construire le site\njupyter-book build book\n# publier localement (structure compl\u00e8te : CSS/JS/images)\nrsync -a --delete book/_build/html/ docs/\ntouch docs/.nojekyll\n</code></pre> <ul> <li> <p>Contribuer : ouvrez une issue pour proposer un tuto, ou soumettez une pull request (PR) avec :</p> <ul> <li>le fichier .md (ou .ipynb) dans book/tutos/ ou book/notebooks/,</li> <li>l\u2019entr\u00e9e correspondante ajout\u00e9e dans book/_toc.yml, </li> <li>si n\u00e9cessaire, la mise \u00e0 jour de .binder/environment.yml.</li> </ul> </li> </ul>"},{"location":"_sources/#ajouter-un-nouveau-contenu-checklist","title":"Ajouter un nouveau contenu (checklist)","text":"<ul> <li>Fichier ajout\u00e9 : book/tutos/mon-sujet.md ou book/notebooks/mon_sujet.ipynb.</li> <li>Sommaire mis \u00e0 jour (book/_toc.yml) :</li> </ul> <pre><code>parts:\n  - caption: \"Notebooks\"\n    chapters:\n      - file: notebooks/mon_sujet\n  - caption: \"Tutos\"\n    chapters:\n      - file: tutos/mon-sujet\n</code></pre> <ul> <li>D\u00e9pendances ajout\u00e9es si besoin : .binder/environment.yml.</li> <li>Build &amp; publication :</li> </ul> <pre><code>jupyter-book clean --all book\njupyter-book build book\nrsync -a --delete book/_build/html/ docs/\ntouch docs/.nojekyll\ngit add -A &amp;&amp; git commit -m \"Publier nouveau contenu\" &amp;&amp; git push\n</code></pre>"},{"location":"_sources/tutos/00_notes_120825/","title":"Notes du 12/08/25 : La m\u00e9thode Lattice di-SIM","text":"<p> Syst\u00e8me Zeiss Elyra 7 \u00e9quip\u00e9 pour la Lattice SIM\u00b2 (source : ista)</p>"},{"location":"_sources/tutos/00_notes_120825/#la-methode-lattice-di-sim","title":"La m\u00e9thode Lattice di-SIM","text":"<p>La m\u00e9thode Lattice di-SIM (SIM\u00b2) est une \u00e9volution de la microscopie \u00e0 illumination structur\u00e9e 3D (3D-SIM), impl\u00e9ment\u00e9e notamment sur le syst\u00e8me Zeiss Elyra 7. Elle combine une illumination sp\u00e9cialis\u00e9e et une reconstruction algorithmique avanc\u00e9e pour d\u00e9passer les limites de la super-r\u00e9solution optique classique.</p>"},{"location":"_sources/tutos/00_notes_120825/#detail-du-procede-de-sim2","title":"D\u00e9tail du proc\u00e9d\u00e9 de SIM\u00b2","text":""},{"location":"_sources/tutos/00_notes_120825/#principe-de-la-sim-classique","title":"Principe de la SIM classique","text":"<p>La SIM (Structured Illumination Microscopy) utilise un motif de lumi\u00e8re structur\u00e9 (bandes sinuso\u00efdales) projet\u00e9 sur l\u2019\u00e9chantillon. Cela transf\u00e8re l\u2019information spatiale haute fr\u00e9quence dans la plage d\u00e9tectable par l\u2019objectif, puis des algorithmes recombinent plusieurs images acquises pour obtenir une r\u00e9solution lat\u00e9rale doubl\u00e9e (~100-120 nm).</p>"},{"location":"_sources/tutos/00_notes_120825/#lattice-sim","title":"Lattice SIM","text":"<p>En Lattice SIM, au lieu de motifs \"grille\", on utilise un pattern \u00ab treillis \u00bb (lattice) qui permet une illumination plus douce et efficace : id\u00e9al pour les \u00e9chantillons vivants et fragiles, car le besoin en photons est r\u00e9duit. </p> <p></p> <p>Comparaison des motifs d'illumination : SIM classique (gauche), Lattice SIM (droite). Source : Zeiss source: Zeiss</p>"},{"location":"_sources/tutos/00_notes_120825/#lattice-sim2-sim2","title":"Lattice SIM\u00b2 (SIM2)","text":"<ul> <li>Reconstruction en deux \u00e9tapes : <ul> <li>1re \u00e9tape : combinaison des ordres de diffraction, suppression du bruit, g\u00e9n\u00e9ration d\u2019une fonction d\u2019\u00e9talement du point (PSF) num\u00e9rique sp\u00e9cifique \u00e0 l\u2019appareil.</li> <li>2e \u00e9tape : reconstitution des structures fines, avec suppression suppl\u00e9mentaire du bruit et filtrage num\u00e9rique.</li> </ul> </li> <li>R\u00e9sultats : <ul> <li>R\u00e9solution lat\u00e9rale jusqu\u2019\u00e0 60 nm</li> <li>R\u00e9solution axiale ~200 nm</li> <li>Section optique am\u00e9lior\u00e9e (meilleur Z)</li> <li>Compatibilit\u00e9 avec la plupart des modes avanc\u00e9s du syst\u00e8me Elyra 7 (SIM, Lattice SIM, Apotome, Leap Mode, SMLM, TIRF, etc.).</li> </ul> </li> </ul>"},{"location":"_sources/tutos/00_notes_120825/#avantages-pour-la-biologie-cellulaire","title":"Avantages pour la biologie cellulaire","text":"<ul> <li>Vitesse d\u2019acquisition \u00e9lev\u00e9e : jusqu\u2019\u00e0 255 images/seconde.</li> <li>Phototoxicit\u00e9 minimale : id\u00e9al pour l\u2019imagerie de cellules vivantes \u00e0 long terme.</li> <li>3D profond : jusqu\u2019\u00e0 ~70\u03bcm d\u2019\u00e9paisseur (vs ~20\u03bcm pour la SIM classique).</li> <li>Facilit\u00e9 d\u2019utilisation : compatible avec les marquages et protocoles standards de bioimagerie.</li> </ul>"},{"location":"_sources/tutos/00_notes_120825/#deploiement-sur-le-zeiss-elyra-7","title":"D\u00e9ploiement sur le Zeiss Elyra 7","text":"<ul> <li>Plateforme multi-modale, contr\u00f4lable par logiciel int\u00e9gralement.</li> <li>Reconstructions avanc\u00e9es SIM\u00b2 &amp; corrections optiques adaptatives.</li> <li>Maximum de qualit\u00e9 d\u2019image, quelles que soient les variations de l\u2019indice de r\u00e9fraction.</li> </ul>"},{"location":"_sources/tutos/00_notes_120825/#points-cles-a-retenir","title":"Points cl\u00e9s \u00e0 retenir","text":"<p>Lattice di-SIM (SIM\u00b2) sur l\u2019Elyra 7 : - Super-r\u00e9solution 3D, rapide et douce - R\u00e9solutions proches de la nanoscopie (~60nm lat\u00e9ral) - Parfaitement adapt\u00e9e aux conditions physiologiques et \u00e0 la biologie du vivant.</p>"},{"location":"_sources/tutos/00_notes_120825/#references-illustrees-et-selectionnees","title":"R\u00e9f\u00e9rences illustr\u00e9es et s\u00e9lectionn\u00e9es","text":"<ol> <li>Pr\u00e9sentation technique Zeiss Elyra 7 et Lattice SIM\u00b2 (IST Austria)</li> <li>Review PMC : Advances in Structured Illumination Microscopy</li> <li>Description technique Elyra 7 SIM\u00b2 (CIBR China)</li> <li>Article sur les avanc\u00e9es SIM2 et applications (PMC)</li> </ol> <p> Visualisation en Lattice SIM\u00b2 : structures subcellulaires \u00e0 tr\u00e8s haute r\u00e9solution (source : Zeiss)</p>"},{"location":"_sources/tutos/01_notes_120825/","title":"01 notes 120825","text":""},{"location":"_sources/tutos/01_notes_120825/#pipeline-de-traitement-dimagesmorphologie-python-ml","title":"Pipeline de traitement d\u2019images/morphologie Python &amp; ML","text":"<p>a) T\u00e9l\u00e9chargement et organisation des donn\u00e9es</p> <pre><code>R\u00e9cup\u00e8re un jeu de SWC sur NeuroMorpho (ex : cortex, type : pyramidal ou interneurone, mutant ou contr\u00f4le).\n\nStructure le dossier (voir section pr\u00e9c\u00e9dente : /data, /src, /notebooks).\n</code></pre> <p>b) Pr\u00e9tra\u00eetement et normalisation spatiale</p> <pre><code>Utilise la librairie MorphoPy ou NeuroM pour charger/analyser/visualiser chaque fichier SWC.\n\nEntra\u00eene (ou applique) une \u00e9tape de recalage spatial afin d\u2019aligner tous les neurones sur un m\u00eame rep\u00e8re ou landmark (ex : centre de l\u2019h\u00e9t\u00e9rotopie, rep\u00e8re anatomique commun).\n\n    Pour cela, tu peux t\u2019inspirer de m\u00e9thodes d\u2019enregistrement spatial tir\u00e9es de l\u2019imagerie (rigid/affine registration via numpy/scipy).\n</code></pre> <p>c) Extraction automatique des features morphologiques</p> <pre><code>Avec MorphoPy ou NeuroM, extrait : nombre de branches, longueur, diam\u00e8tre, surface, r\u00e9partition axones/dendrites, etc.\n\nStocke les features sous format tabulaire (features.csv).\n</code></pre> <p>d) Analyse &amp; Machine Learning (PyTorch)</p> <pre><code>Utilise un notebook pour :\n\n    Appliquer une r\u00e9duction de dimension (PCA, t-SNE) pour visualisation.\n\n    Classification automatique des morphotypes (k-means, clustering hi\u00e9rarchique, ou classifieur supervis\u00e9 avec PyTorch si tu as un label par exemple : mutant vs contr\u00f4le, ou par morphotype).\n\n    Ou encore apprentissage de signatures morpho-\u00e9lectriques en fusionnant avec d\u2019autres features (avec PyTorch, design d\u2019un autoencodeur ou d\u2019un r\u00e9seau simple dense).\n</code></pre> <p>e) Visualisation avanc\u00e9e</p> <pre><code>Produis automatiquement :\n\n    Cartes de densit\u00e9 ou overlays (via MorphoPy ou matplotlib).\n\n    Figure de la distribution spatiale des axones/dendrites par rapport au landmark commun.\n\n    Diagrammes de clusters/UMAP/PCA des morphotypes.\n</code></pre> <p>f) G\u00e9n\u00e8re la documentation, la reproductibilit\u00e9 et package le tout pour le d\u00e9p\u00f4t GitHub</p> <pre><code>Scripts clairs, notebooks, README, metadata (desc. des fichiers, provenance, licences).\n</code></pre>"},{"location":"_sources/tutos/base_donnees_ouvertes/","title":"Liste de base de donn\u00e9es ouvertes","text":""},{"location":"_sources/tutos/base_donnees_ouvertes/#morphologie-neuronale","title":"Morphologie neuronale","text":"<p>NeuroMorpho.Org : C\u2019est la plus grande base de reconstructions neuronales 3D au format SWC, issue de multiples esp\u00e8ces, r\u00e9gions, types cellulaires et contextes pathologiques (ex : h\u00e9t\u00e9rotopie, \u00e9pilepsie). On peut filtrer selon esp\u00e8ce, structure, exp\u00e9rience, puis t\u00e9l\u00e9charger des lots de SWC pour analyse automatique.</p> <p>Sources : </p> <ul> <li> <p>incf</p> </li> <li> <p>article conversion swc</p> </li> <li> <p>article nature swc</p> </li> </ul> <p>BrainAtlas, Allen Brain Atlas, ou MouseLight : D\u2019autres bases, compl\u00e9mentaires, mais NeuroMorpho reste la r\u00e9f\u00e9rence pour le format standardis\u00e9 SWC.</p> <p>Donn\u00e9es associ\u00e9es \u00e0 des publications r\u00e9centes : Chercher des \u00e9tudes sur l\u2019h\u00e9t\u00e9rotopie (cf. articles sur GMH, Eml1/RhoA mutants\u2026) qui d\u00e9posent leurs reconstructions SWC en annexe ou via NeuroMorpho (souvent cit\u00e9 dans la section \u00ab Data Availability \u00bb des papiers).</p> <p>-article</p>"},{"location":"_sources/tutos/coockie_cutter/","title":"Cr\u00e9er une documentation en ligne Markdown.","text":"<p>Ce document explique comment \u00e9crire une documentation comme celle ci. L'objectif est que la documentation soit publique, open source, clair. La motivation vient d'un besoin personel de r\u00e9pertorier l'ensemble des notes acquises lors de la veille technique formation, apprentissage en lien avec l'analyse de donn\u00e9e et le m\u00e9tier d'ing\u00e9nieur de recherche, et bio-informaticien.</p>"},{"location":"_sources/tutos/coockie_cutter/#guide-detaille-quest-ce-que-cookiecutter-comment-linstaller-et-creer-un-repo-github-avec","title":"Guide d\u00e9taill\u00e9 : Qu\u2019est-ce que Cookiecutter, comment l\u2019installer et cr\u00e9er un repo Github avec","text":"<p>Ce document explique \u00e9tape par \u00e9tape ce qu\u2019est Cookiecutter, comment l\u2019installer facilement, et comment utilser le template pour cr\u00e9er un repo Github. </p>"},{"location":"_sources/tutos/coockie_cutter/#1-quest-ce-que-cookiecutter","title":"1. Qu\u2019est-ce que Cookiecutter ?","text":"<p>Cookiecutter est un outil open source Python qui permet de g\u00e9n\u00e9rer rapidement la structure compl\u00e8te d\u2019un projet \u00e0 partir de mod\u00e8les (templates) r\u00e9utilisables.</p>"},{"location":"_sources/tutos/coockie_cutter/#a-quoi-sert-cookiecutter","title":"\u00c0 quoi sert Cookiecutter ?","text":"<ul> <li>Automatiser la cr\u00e9ation de la base d\u2019un projet logiciel ou scientifique.</li> <li>Garantir une organisation standardis\u00e9e, claire et adapt\u00e9e aux bonnes pratiques.</li> <li>\u00c9viter de copier-coller un vieux projet et perdre du temps \u00e0 organiser ses dossiers/fichiers.</li> <li>Faciliter la reproductibilit\u00e9 et la collaboration en partant d\u2019une base propre et document\u00e9e.</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#comment-ca-marche","title":"Comment \u00e7a marche ?","text":"<ul> <li>Cookiecutter utilise des templates (souvent h\u00e9berg\u00e9s sur GitHub).</li> <li>Ces templates contiennent :</li> <li>Une structure de fichiers et dossiers</li> <li>Des fichiers avec des variables que l\u2019on remplit au moment de la cr\u00e9ation (exemple : nom du projet, auteur, description)</li> <li>Des scripts ou fichiers de configuration</li> <li>Cookiecutter te pose des questions pour personnaliser ton projet (nom, licence, gestion de l\u2019environnement, d\u00e9pendances\u2026).</li> <li>\u00c0 partir de tes r\u00e9ponses, il g\u00e9n\u00e8re un dossier complet pr\u00eat \u00e0 l\u2019emploi.</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#technologies-sous-jacentes","title":"Technologies sous-jacentes","text":"<ul> <li>Bas\u00e9 sur le moteur de template Jinja2 pour rendre dynamique la g\u00e9n\u00e9ration des fichiers.</li> <li>Travaille en ligne de commande, compatible avec tous les environnements Python.</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#2-comment-installer-cookiecutter","title":"2. Comment installer Cookiecutter ?","text":""},{"location":"_sources/tutos/coockie_cutter/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Avoir Python install\u00e9 (version 3.3 ou sup\u00e9rieure recommand\u00e9e).</li> <li>Avoir <code>pip</code>, le gestionnaire de paquets Python.</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#installation-simple-via-pip","title":"Installation simple via pip","text":"<p>Ouvre un terminal (PowerShell sous Windows, Terminal sous Mac/Linux) et tape la commande :</p> <pre><code>pip install \"cookiecutter&gt;=1.7.0\"\n</code></pre>"},{"location":"_sources/tutos/coockie_cutter/#verification","title":"V\u00e9rification","text":"<p>Pour v\u00e9rifier que Cookiecutter est bien install\u00e9, ex\u00e9cute :</p> <pre><code>cookiecutter --version\n</code></pre> <p>Si la commande est reconnue, tu es pr\u00eat\u00b7e \u00e0 l\u2019utiliser.</p> <p>Remarque : Si la commande <code>cookiecutter</code> n\u2019est pas trouv\u00e9e, il peut s\u2019agir d\u2019un probl\u00e8me de variable d\u2019environnement PATH (surtout sous Windows). Dans ce cas, essaie :</p> <pre><code>python -m cookiecutter --version\n</code></pre>"},{"location":"_sources/tutos/coockie_cutter/#3-utiliser-cookiecutter-pour-creer-un-projet","title":"3. Utiliser Cookiecutter pour cr\u00e9er un projet","text":""},{"location":"_sources/tutos/coockie_cutter/#etape-1-choisir-un-template","title":"\u00c9tape 1 : Choisir un template","text":"<p>Tu peux utiliser :</p> <ul> <li>Un template officiel (exemple : <code>https://github.com/drivendata/cookiecutter-data-science</code> pour des projets data science)</li> <li>Un d\u00e9p\u00f4t GitHub public contenant ton template personnalis\u00e9</li> <li>Ton propre template local (dossier avec la structure du template)</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#etape-2-lancer-la-commande-cookiecutter","title":"\u00c9tape 2 : Lancer la commande Cookiecutter","text":"<p>Dans ton terminal, tape :</p> <pre><code>cookiecutter https://github.com/drivendata/cookiecutter-data-science\n</code></pre> <p>Remplace l\u2019URL par celle de ton template.</p>"},{"location":"_sources/tutos/coockie_cutter/#etape-3-repondre-aux-questions","title":"\u00c9tape 3 : R\u00e9pondre aux questions","text":"<p>Cookiecutter te posera une s\u00e9rie de questions pour personnaliser le projet, par exemple :</p> <ul> <li>Nom du projet</li> <li>Nom du module Python</li> <li>Auteur</li> <li>Description</li> <li>Gestionnaire d\u2019environnement (conda, pip\u2026)</li> <li>Licence open source</li> <li>Framework de test ou formatting \u00e0 utiliser</li> </ul> <p>Ces questions sont d\u00e9finies dans un fichier <code>cookiecutter.json</code> dans le template.</p>"},{"location":"_sources/tutos/coockie_cutter/#etape-4-generation-du-projet","title":"\u00c9tape 4 : G\u00e9n\u00e9ration du projet","text":"<p>Apr\u00e8s avoir r\u00e9pondu, Cookiecutter cr\u00e9e un nouveau dossier portant le nom de ton projet, avec :</p> <ul> <li>Tous les fichiers de base configur\u00e9s selon tes choix</li> <li>La structure de dossiers recommand\u00e9e (donn\u00e9es, scripts, tests, documentation, etc.)</li> <li>Fichiers de configuration (environnement, licence, README)</li> </ul> <p>Tu peux directement commencer le d\u00e9veloppement dedans.</p>"},{"location":"_sources/tutos/coockie_cutter/#4-exemple-concret-creation-de-ton-projet-neuromorpho_ml_pipeline","title":"4. Exemple concret : Cr\u00e9ation de ton projet <code>NeuroMorpho_ML_Pipeline</code>","text":"<p>J'ai utilis\u00e9 le template cookiecutter-data-science pour g\u00e9n\u00e9rer un d\u00e9p\u00f4t structur\u00e9 pour un projet ML sur les donn\u00e9es NeuroMorpho.</p> <p>Voici les options que j'ai choisi :</p> <pre><code>ccds\n</code></pre> <p>(Commande raccourcie pour cookiecutter-data-science) Choix des param\u00e8tres avec r\u00e9ponses types, par exemple :</p> <p>project_name: NeuroMorpho_ML_Pipeline repo_name: NeuroMorpho_ML_Pipeline module_name: NeuroMorpho_ML_Pipeline author_name: Maxime Dieudonn\u00e9 description: Demo project ML techniques for NeuroMorpho data analysis dataset_storage: none environment_manager: conda dependency_file: environment.yml pydata_packages: basic testing_framework: pytest linting_and_formatting: flake8 + black + isort open_source_license: MIT docs: mkdocs include_code_scaffold: no</p>"},{"location":"_sources/tutos/coockie_cutter/#ce-que-ca-a-cree","title":"Ce que \u00e7a a cr\u00e9\u00e9","text":"<ul> <li>Un dossier <code>NeuroMorpho_ML_Pipeline/</code> avec le code de ton module</li> <li>Des dossiers <code>data/</code>, <code>notebooks/</code>, <code>tests/</code>, <code>docs/</code> (documentation MkDocs)</li> <li>Un fichier <code>environment.yml</code> pour cr\u00e9er un environnement conda avec toutes les d\u00e9pendances</li> <li>Un <code>README.md</code> pr\u00e9-rempli avec la description</li> <li>Des fichiers de licence (MIT), de configuration pour tests (pytest) et linting (flake8, black, isort)</li> <li>Une base pour la documentation avec MkDocs pr\u00eate \u00e0 \u00e9diter</li> </ul> <p>On a une structure reproductible, pr\u00eate \u00e0 \u00eatre versionn\u00e9e sous Git, partag\u00e9e sur GitHub et maintenue par toute \u00e9quipe.</p>"},{"location":"_sources/tutos/coockie_cutter/#5-conseils-dusage","title":"5. Conseils d\u2019usage","text":"<ul> <li>Modifie les fichiers <code>README.md</code> et ceux dans <code>docs/</code> pour documenter pr\u00e9cis\u00e9ment ton projet.</li> <li>Utilise <code>conda env create -f environment.yml</code> pour recr\u00e9er l\u2019environnement de travail.</li> <li>Mets ton code dans le dossier du module (ici <code>NeuroMorpho_ML_Pipeline/</code>).</li> <li>Ajoute des tests dans <code>tests/</code> et ex\u00e9cute <code>pytest</code> pour la qualit\u00e9.</li> <li>G\u00e8re la documentation avec <code>mkdocs serve</code> et publie-la sur GitHub Pages si besoin.</li> <li>Versionne tout avec Git et h\u00e9berge sur GitHub (utilise la commande <code>git push</code>).</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#6-ressources-utiles","title":"6. Ressources utiles","text":"<ul> <li>Documentation officielle Cookiecutter (anglais)</li> <li>Exemple Cookiecutter Data Science github</li> <li>Tutoriel vid\u00e9o rapide en fran\u00e7ais</li> <li>Guide Microsoft Visual Studio (fran\u00e7ais) pour Cookiecutter : cr\u00e9ation via interface GUI lien ici</li> </ul>"},{"location":"_sources/tutos/coockie_cutter/#en-resume","title":"En r\u00e9sum\u00e9","text":"\u00c9tape Action cl\u00e9 Pr\u00e9sentation Cookiecutter = automatisation cr\u00e9ation projet Installation <code>pip install cookiecutter</code> Lancement <code>cookiecutter &lt;url_du_template&gt;</code> Personnalisation R\u00e9pondre aux questions configurables R\u00e9sultat Projet complet g\u00e9n\u00e9r\u00e9, pr\u00eat \u00e0 coder Maintien Versionnement git, documentation, tests <p>Avec Cookiecutter, tu gagnes un temps pr\u00e9cieux et tu assures la coh\u00e9rence de tes projets, ce qui est id\u00e9al pour un travail scientifique et collaboratif de qualit\u00e9.</p>"},{"location":"_sources/tutos/coockie_cutter/#commandes","title":"commandes","text":"<pre><code>mkdocs serve --config-file docs/mkdocs.yml  \n````\n\n```bash\nmkdocs build --config-file docs/mkdocs.yml  \n````\n\n```bash\nmkdocs gh-deploy --config-file docs/mkdocs.yml\n</code></pre>"},{"location":"_sources/tutos/metier_bioinformaticien/","title":"Le m\u00e9tier de bio-informaticien\u00b7ne, c\u2019est quoi ?","text":"<p>La bio-informatique se situe \u00e0 l\u2019interface entre la biologie, l'informatique et les statistique.  Le m\u00e9tier consiste \u00e0 :</p> <ul> <li> <p>concevoir des analyses de donn\u00e9es biologiques (NGS, prot\u00e9omique, imagerie, m\u00e9tabolomique, ph\u00e9notypage, etc.) ;</p> </li> <li> <p>d\u00e9velopper des scripts/pipelines robustes et reproductibles ;</p> </li> <li> <p>interpr\u00e9ter les r\u00e9sultats avec les \u00e9quipes exp\u00e9rimentales ;</p> </li> <li> <p>diffuser des outils, des jeux de donn\u00e9es et des bonnes pratiques FAIR.</p> </li> </ul>"},{"location":"_sources/tutos/metier_bioinformaticien/#domaines-dapplication-exemples","title":"Domaines d\u2019application (exemples)","text":"<ul> <li> <p>G\u00e9nomique : contr\u00f4le qualit\u00e9 (FastQC/MultiQC), alignement (BWA/Bowtie2), appel de variants (bcftools/GATK), annotation.</p> </li> <li> <p>Transcriptomique (RNA-seq) : quasi-mapping (salmon), quantification, tests diff\u00e9rentiels, enrichissements fonctionnels.</p> </li> <li> <p>\u00c9pig\u00e9nomique : ChIP-seq/ATAC-seq, analyse de pics, int\u00e9gration multi-omiques.</p> </li> <li> <p>Prot\u00e9omique : identification/quantification, recherche de PTM, int\u00e9grations prot\u00e9ome-g\u00e9nome.</p> </li> <li> <p>Imagerie : segmentation, extraction de features, apprentissage profond, tracking.</p> </li> <li> <p>Microbiome/M\u00e9tag\u00e9nomique : classification taxonomique, profils fonctionnels, diversit\u00e9.</p> </li> </ul>"},{"location":"_sources/tutos/metier_bioinformaticien/#les-piliers-du-metier","title":"Les piliers du m\u00e9tier","text":"<ul> <li> <p>Programmation scientifique : Python (numpy/pandas/matplotlib), R (tidyverse/bioconductor).</p> </li> <li> <p>Syst\u00e8mes : Linux/CLI, gestion de paquets (conda/mamba), conteneurs (Docker/Singularity/Apptainer).</p> </li> <li> <p>Statistique &amp; mod\u00e9lisation : tests, mod\u00e8les lin\u00e9aires, contr\u00f4le du FDR, apprentissage machine.</p> </li> <li> <p>Reproductibilit\u00e9 : Git/GitHub, notebooks (Jupyter), pipelines (Snakemake/Nextflow), CI.</p> </li> <li> <p>Donn\u00e9es &amp; FAIR : m\u00e9tadonn\u00e9es, formats standards (FASTQ/SAM/BAM/VCF/GFF), d\u00e9p\u00f4ts publics.</p> </li> <li> <p>Interop &amp; infra : HPC/SLURM, Cloud, stockage, s\u00e9curit\u00e9/\u00e9thique/RGPD.</p> </li> </ul>"},{"location":"_sources/tutos/metier_bioinformaticien/#un-workflow-type-ngs","title":"Un workflow type (NGS)","text":"<ol> <li> <p>Planifier : design exp\u00e9rimental, puissance/statistiques, m\u00e9tadonn\u00e9es.</p> </li> <li> <p>Acqu\u00e9rir : FASTQ + checks (int\u00e9grit\u00e9, encodage).</p> </li> <li> <p>QC : FastQC/MultiQC, trimming si besoin.</p> </li> <li> <p>Aligner/Quantifier : BWA/Bowtie2, salmon/kallisto.</p> </li> <li> <p>Analyser : variantes, expression diff\u00e9rentielle, enrichissements.</p> </li> <li> <p>Valider : contr\u00f4les positifs, r\u00e9plicats, sensibilit\u00e9s/sp\u00e9cificit\u00e9s.</p> </li> <li> <p>Documenter &amp; publier : figures, rapport, d\u00e9p\u00f4t de donn\u00e9es, archivage.</p> </li> </ol>"},{"location":"_sources/tutos/metier_bioinformaticien/#boite-a-outils-recommandee","title":"Bo\u00eete \u00e0 outils recommand\u00e9e","text":"<ul> <li> <p>Gestion d\u2019environnements : conda/micromamba (fichiers environment.yml).</p> </li> <li> <p>Pipelines : Snakemake/Nextflow + profils HPC/Cloud.</p> </li> <li> <p>Qualit\u00e9 : MultiQC ; tests unitaires simples sur fonctions critiques.</p> </li> <li> <p>Visualisation : matplotlib/plotly/seaborn, IGV, UCSC Genome Browser.</p> </li> <li> <p>Packaging : pyproject.toml, versions \u00e9pingl\u00e9es, conteneurs pour la prod.</p> </li> <li> <p>Collab : Git/GitHub (issues, PR), conventions de nommage et de logs.</p> </li> </ul>"},{"location":"_sources/tutos/metier_bioinformaticien/#qualite-ethique-diffusion","title":"Qualit\u00e9, \u00e9thique, diffusion","text":"<ul> <li> <p>Tra\u00e7abilit\u00e9 : versions d\u2019outils, r\u00e9f\u00e9rences g\u00e9nomiques, param\u00e8tres ; journal d\u2019analyse.</p> </li> <li> <p>\u00c9thique &amp; RGPD : pseudonymisation, contr\u00f4les d\u2019acc\u00e8s, consentements, DPIA si n\u00e9cessaire.</p> </li> <li> <p>FAIR : formats ouverts, DOIs, documentation d\u2019acc\u00e8s/reprise, licences claires.</p> </li> </ul>"},{"location":"_sources/tutos/metier_bioinformaticien/#bonnes-pratiques-cnrs-recommandations-rapides","title":"Bonnes pratiques CNRS (recommandations rapides)","text":"<ul> <li> <p>Donn\u00e9es : s\u00e9parer brutes / interm\u00e9diaires / r\u00e9sultats, versionner les scripts mais pas les gros binaires (utiliser des DOIs ou DRS).</p> </li> <li> <p>Param\u00e8tres : conserver un fichier YAML/TOML centralis\u00e9 des param\u00e8tres d\u2019analyse.</p> </li> <li> <p>Rapports : g\u00e9n\u00e9rer automatiquement un rapport QC (Notebook/Quarto/Markdown + MultiQC).</p> </li> <li> <p>Formation : documenter pr\u00e9-requis, temps d\u2019ex\u00e9cution, taille des donn\u00e9es, budgets HPC.</p> </li> <li> <p>P\u00e9rennit\u00e9 : fournir une image conteneur (ou un environment.yml fig\u00e9) + un how-to-reproduce.</p> </li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/","title":"Techniques d'imagerie et de microscopie en neurosciences","text":"<p>Ce document r\u00e9sume les principales techniques d\u2019imagerie et de microscopie utilis\u00e9es pour l\u2019exploration du syst\u00e8me nerveux, en mettant l'accent sur leurs principes, applications, avantages et limites pour l\u2019\u00e9tude de la structure, de la fonction et de la dynamique neuronales.</p>"},{"location":"_sources/tutos/techniques_imagerie/#1-microscopie-a-fond-clair-et-contraste-de-phase","title":"1. Microscopie \u00e0 fond clair et contraste de phase","text":"<ul> <li>Fond clair\u00a0: Observation classique de coupes histologiques fix\u00e9es et color\u00e9es. Limit\u00e9 \u00e0 des \u00e9chantillons fins et peu d\u2019informations sur des structures subcellulaires dynamiques.</li> <li>Contraste de phase/DIC\u00a0: Permet d\u2019observer des cellules vivantes sans marquage, utile pour le suivi morphologique cellulaire.</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#2-microscopie-a-fluorescence","title":"2. Microscopie \u00e0 fluorescence","text":"<ul> <li>Utilise des fluorophores pour r\u00e9v\u00e9ler la distribution de mol\u00e9cules sp\u00e9cifiques.</li> <li>Permet la multi-coloration et l\u2019imagerie dynamique dans des cellules et tissus vivants.</li> <li>Repose sur des syst\u00e8mes d\u2019excitation/emission adapt\u00e9s aux marquages.</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#3-microscopie-confocale-laser","title":"3. Microscopie confocale laser","text":"<ul> <li>Acquisition par balayage point-par-point\u00a0: am\u00e9liore la r\u00e9solution axiale et la section optique.</li> <li>G\u00e9n\u00e8re des reconstructions 3D d\u2019\u00e9chantillons \u00e9pais (tissus c\u00e9r\u00e9braux, organo\u00efdes\u2026).</li> <li>Couramment utilis\u00e9e pour visualiser l\u2019architecture neuronale et la connectivit\u00e9[1][6].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#4-microscopie-multiphotonique","title":"4. Microscopie multiphotonique","text":"<ul> <li>Utilise de la lumi\u00e8re infrarouge pour exciter les fluorophores en profondeur (&gt;500\u00a0\u00b5m).</li> <li>Faible phototoxicit\u00e9, imagerie in vivo ou sur tissus \u00e9pais.</li> <li>Privil\u00e9gi\u00e9e pour l\u2019\u00e9tude de la physiologie neuronale chez l\u2019animal vivant[1][6].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#5-microscopie-a-feuille-de-lumiere-light-sheet","title":"5. Microscopie \u00e0 feuille de lumi\u00e8re (Light Sheet)","text":"<ul> <li>Illumination s\u00e9lective d\u2019une tranche mince de l\u2019\u00e9chantillon.</li> <li>Permet l\u2019imagerie rapide de grands volumes, faible phototoxicit\u00e9, id\u00e9ale pour l\u2019imagerie 3D d\u2019\u00e9chantillons vivants fragiles[1][6].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#6-microscopie-electronique-me","title":"6. Microscopie \u00e9lectronique (ME)","text":"<ul> <li>R\u00e9solution nanom\u00e9trique (jusqu\u2019\u00e0 l\u2019\u00e9chelle des organites et complexes synaptiques).</li> <li>Limite\u00a0: n\u00e9cessite des \u00e9chantillons fix\u00e9s et tr\u00e8s fins, incompatible avec le vivant[2].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#7-microscopie-super-resolution","title":"7. Microscopie super-r\u00e9solution","text":"<ul> <li>D\u00e9passe la limite de diffraction de la lumi\u00e8re (~250\u00a0nm) pour atteindre 20\u201360\u00a0nm.</li> <li>Techniques principales\u00a0:</li> <li>STORM/PALM\u00a0: Localisation de mol\u00e9cules individuelles pour un mapping ultrastructural pr\u00e9cis.</li> <li>SIM, STED\u00a0: Reconstruction d\u2019images \u00e0 partir de motifs d\u2019illumination ou d\u2019\u00e9puisement stimul\u00e9.</li> <li>Applications\u00a0: visualisation fine des synapses, du cytosquelette, du trafic v\u00e9siculaire[3][8][9].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#8-techniques-innovantes-et-complementaires","title":"8. Techniques innovantes et compl\u00e9mentaires","text":"<ul> <li>Imagerie SUSHI (super-resolution shadow imaging)\u00a0: R\u00e9v\u00e8le l\u2019espace extracellulaire c\u00e9r\u00e9bral avec contraste \u00e9lev\u00e9 dans les tissus vivants[2].</li> <li>Optog\u00e9n\u00e9tique coupl\u00e9e \u00e0 l\u2019imagerie\u00a0: Contr\u00f4le de l\u2019activit\u00e9 neuronale par la lumi\u00e8re pour l\u2019\u00e9tude de la connectivit\u00e9 et de la dynamique des r\u00e9seaux[1].</li> <li>Microscopie ultrasonore fonctionnelle (fULM)\u00a0: Permet d\u2019observer l\u2019activit\u00e9 c\u00e9r\u00e9brale dans tout le cerveau \u00e0 r\u00e9solution microscopique, bas\u00e9e sur le suivi du flux vasculaire via microbulles[4].</li> <li>Optique adaptative\u00a0: Compense les aberrations et am\u00e9liore la performance d\u2019imagerie profonde dans les tissus biologiques denses[5].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#9-imagerie-macroscopique-et-multimodale","title":"9. Imagerie macroscopique et multimodale","text":"<ul> <li>IRM/IRMf\u00a0: Imagerie non invasive in vivo de la structure et de l\u2019activit\u00e9 c\u00e9r\u00e9brale \u00e0 l\u2019\u00e9chelle millim\u00e9trique.</li> <li>Tomographie, imagerie mol\u00e9culaire (TEP, SPECT), \u00e9chographie\u00a0: Recherches translationnelles et analyses de pathologies c\u00e9r\u00e9brales[7].</li> <li>Imagerie corr\u00e9lative optique/ME\u00a0: Associe la sp\u00e9cificit\u00e9 mol\u00e9culaire de la fluorescence et la r\u00e9solution de la microscopie \u00e9lectronique pour cartographier l\u2019architecture neuronale complexe[9][10].</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#10-defis-et-perspectives","title":"10. D\u00e9fis et perspectives","text":"<ul> <li>Conciliation entre profondeur, r\u00e9solution, vitesse d\u2019acquisition et phototoxicit\u00e9 lors de l\u2019imagerie de tissus nerveux denses ou vivants[1][6].</li> <li>D\u00e9veloppement de nouvelles techniques combinant haute r\u00e9solution, quantification dynamique et analyse automatis\u00e9e d\u2019images.</li> <li>Int\u00e9gration d\u2019approches FAIR, IA et workflows d\u2019analyse avanc\u00e9s en bio-imagerie neuronale.</li> </ul>"},{"location":"_sources/tutos/techniques_imagerie/#references-utilisees","title":"R\u00e9f\u00e9rences utilis\u00e9es\u00a0:","text":"<ul> <li>Leica Neurosciences [1]</li> <li>medecinesciences Imagerie SUSHI [2]</li> <li>Nikon Ressources Neurosciences / STORM [3]</li> <li>Inserm fULM [4]</li> <li>ANR Optique adaptative [5]</li> <li>INM Plateformes Imagerie [6]</li> <li>ENS Lyon Imagerie c\u00e9r\u00e9brale [7]</li> <li>CNRS Le Journal / Super-r\u00e9solution [8]</li> <li>FRCneurodon Super-r\u00e9solution &amp; Cryo-ME [9]</li> <li>ICM Plateformes imagerie [10]</li> </ul>"}]}